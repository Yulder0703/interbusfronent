{"ast":null,"code":"import { Vue } from '../../../vue';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../../constants/props';\nimport { SLOT_NAME_CUSTOM_FOOT } from '../../../constants/slots';\nimport { makeProp } from '../../../utils/props';\nimport { BTfoot } from '../tfoot'; // --- Props ---\n\nexport var props = {\n  footClone: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Any Bootstrap theme variant (or custom)\n  // Falls back to `headRowVariant`\n  footRowVariant: makeProp(PROP_TYPE_STRING),\n  // 'dark', 'light', or `null` (or custom)\n  footVariant: makeProp(PROP_TYPE_STRING),\n  tfootClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  tfootTrClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING)\n}; // --- Mixin ---\n// @vue/component\n\nexport var tfootMixin = Vue.extend({\n  props: props,\n  methods: {\n    renderTFootCustom: function renderTFootCustom() {\n      var h = this.$createElement;\n\n      if (this.hasNormalizedSlot(SLOT_NAME_CUSTOM_FOOT)) {\n        return h(BTfoot, {\n          class: this.tfootClass || null,\n          props: {\n            footVariant: this.footVariant || this.headVariant || null\n          },\n          key: 'bv-tfoot-custom'\n        }, this.normalizeSlot(SLOT_NAME_CUSTOM_FOOT, {\n          items: this.computedItems.slice(),\n          fields: this.computedFields.slice(),\n          columns: this.computedFields.length\n        }));\n      }\n\n      return h();\n    },\n    renderTfoot: function renderTfoot() {\n      // Passing true to renderThead will make it render a tfoot\n      return this.footClone ? this.renderThead(true) : this.renderTFootCustom();\n    }\n  }\n});","map":{"version":3,"sources":["D:/INTERBUS VUE.JS/interbusfronent/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tfoot.js"],"names":["Vue","PROP_TYPE_ARRAY_OBJECT_STRING","PROP_TYPE_BOOLEAN","PROP_TYPE_STRING","SLOT_NAME_CUSTOM_FOOT","makeProp","BTfoot","props","footClone","footRowVariant","footVariant","tfootClass","tfootTrClass","tfootMixin","extend","methods","renderTFootCustom","h","$createElement","hasNormalizedSlot","class","headVariant","key","normalizeSlot","items","computedItems","slice","fields","computedFields","columns","length","renderTfoot","renderThead"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,6BAAT,EAAwCC,iBAAxC,EAA2DC,gBAA3D,QAAmF,0BAAnF;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CAAmC;;AAEnC,OAAO,IAAIC,KAAK,GAAG;AACjBC,EAAAA,SAAS,EAAEH,QAAQ,CAACH,iBAAD,EAAoB,KAApB,CADF;AAEjB;AACA;AACAO,EAAAA,cAAc,EAAEJ,QAAQ,CAACF,gBAAD,CAJP;AAKjB;AACAO,EAAAA,WAAW,EAAEL,QAAQ,CAACF,gBAAD,CANJ;AAOjBQ,EAAAA,UAAU,EAAEN,QAAQ,CAACJ,6BAAD,CAPH;AAQjBW,EAAAA,YAAY,EAAEP,QAAQ,CAACJ,6BAAD;AARL,CAAZ,C,CASJ;AACH;;AAEA,OAAO,IAAIY,UAAU,GAAGb,GAAG,CAACc,MAAJ,CAAW;AACjCP,EAAAA,KAAK,EAAEA,KAD0B;AAEjCQ,EAAAA,OAAO,EAAE;AACPC,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C,UAAIC,CAAC,GAAG,KAAKC,cAAb;;AAEA,UAAI,KAAKC,iBAAL,CAAuBf,qBAAvB,CAAJ,EAAmD;AACjD,eAAOa,CAAC,CAACX,MAAD,EAAS;AACfc,UAAAA,KAAK,EAAE,KAAKT,UAAL,IAAmB,IADX;AAEfJ,UAAAA,KAAK,EAAE;AACLG,YAAAA,WAAW,EAAE,KAAKA,WAAL,IAAoB,KAAKW,WAAzB,IAAwC;AADhD,WAFQ;AAKfC,UAAAA,GAAG,EAAE;AALU,SAAT,EAML,KAAKC,aAAL,CAAmBnB,qBAAnB,EAA0C;AAC3CoB,UAAAA,KAAK,EAAE,KAAKC,aAAL,CAAmBC,KAAnB,EADoC;AAE3CC,UAAAA,MAAM,EAAE,KAAKC,cAAL,CAAoBF,KAApB,EAFmC;AAG3CG,UAAAA,OAAO,EAAE,KAAKD,cAAL,CAAoBE;AAHc,SAA1C,CANK,CAAR;AAWD;;AAED,aAAOb,CAAC,EAAR;AACD,KAnBM;AAoBPc,IAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC;AACA,aAAO,KAAKvB,SAAL,GAAiB,KAAKwB,WAAL,CAAiB,IAAjB,CAAjB,GAA0C,KAAKhB,iBAAL,EAAjD;AACD;AAvBM;AAFwB,CAAX,CAAjB","sourcesContent":["import { Vue } from '../../../vue';\r\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../../constants/props';\r\nimport { SLOT_NAME_CUSTOM_FOOT } from '../../../constants/slots';\r\nimport { makeProp } from '../../../utils/props';\r\nimport { BTfoot } from '../tfoot'; // --- Props ---\r\n\r\nexport var props = {\r\n  footClone: makeProp(PROP_TYPE_BOOLEAN, false),\r\n  // Any Bootstrap theme variant (or custom)\r\n  // Falls back to `headRowVariant`\r\n  footRowVariant: makeProp(PROP_TYPE_STRING),\r\n  // 'dark', 'light', or `null` (or custom)\r\n  footVariant: makeProp(PROP_TYPE_STRING),\r\n  tfootClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\r\n  tfootTrClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING)\r\n}; // --- Mixin ---\r\n// @vue/component\r\n\r\nexport var tfootMixin = Vue.extend({\r\n  props: props,\r\n  methods: {\r\n    renderTFootCustom: function renderTFootCustom() {\r\n      var h = this.$createElement;\r\n\r\n      if (this.hasNormalizedSlot(SLOT_NAME_CUSTOM_FOOT)) {\r\n        return h(BTfoot, {\r\n          class: this.tfootClass || null,\r\n          props: {\r\n            footVariant: this.footVariant || this.headVariant || null\r\n          },\r\n          key: 'bv-tfoot-custom'\r\n        }, this.normalizeSlot(SLOT_NAME_CUSTOM_FOOT, {\r\n          items: this.computedItems.slice(),\r\n          fields: this.computedFields.slice(),\r\n          columns: this.computedFields.length\r\n        }));\r\n      }\r\n\r\n      return h();\r\n    },\r\n    renderTfoot: function renderTfoot() {\r\n      // Passing true to renderThead will make it render a tfoot\r\n      return this.footClone ? this.renderThead(true) : this.renderTFootCustom();\r\n    }\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}