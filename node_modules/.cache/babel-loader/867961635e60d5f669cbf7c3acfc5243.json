{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { Vue } from '../../vue';\nimport { NAME_TRANSPORTER, NAME_TRANSPORTER_TARGET } from '../../constants/components';\nimport { IS_BROWSER } from '../../constants/env';\nimport { PROP_TYPE_ARRAY_FUNCTION, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { HTMLElement } from '../../constants/safe-types';\nimport { concat } from '../../utils/array';\nimport { removeNode, select } from '../../utils/dom';\nimport { identity } from '../../utils/identity';\nimport { isFunction, isString } from '../../utils/inspect';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { makeProp } from '../../utils/props'; // --- Helper components ---\n// BVTransporter/BVTransporterTarget:\n//\n// Single root node portaling of content, which retains parent/child hierarchy\n// Unlike Portal-Vue where portaled content is no longer a descendent of its\n// intended parent components\n//\n// Private components for use by Tooltips, Popovers and Modals\n//\n// Based on vue-simple-portal\n// https://github.com/LinusBorg/vue-simple-portal\n// Transporter target used by BVTransporter\n// Supports only a single root element\n// @vue/component\n\nvar BVTransporterTarget = /*#__PURE__*/Vue.extend({\n  // As an abstract component, it doesn't appear in the $parent chain of\n  // components, which means the next parent of any component rendered inside\n  // of this one will be the parent from which is was portal'd\n  abstract: true,\n  name: NAME_TRANSPORTER_TARGET,\n  props: {\n    // Even though we only support a single root element,\n    // VNodes are always passed as an array\n    nodes: makeProp(PROP_TYPE_ARRAY_FUNCTION)\n  },\n  data: function data(vm) {\n    return {\n      updatedNodes: vm.nodes\n    };\n  },\n  destroyed: function destroyed() {\n    removeNode(this.$el);\n  },\n  render: function render(h) {\n    var updatedNodes = this.updatedNodes;\n    var $nodes = isFunction(updatedNodes) ? updatedNodes({}) : updatedNodes;\n    $nodes = concat($nodes).filter(identity);\n\n    if ($nodes && $nodes.length > 0 && !$nodes[0].text) {\n      return $nodes[0];\n    }\n    /* istanbul ignore next */\n\n\n    return h();\n  }\n}); // --- Props ---\n\nexport var props = {\n  // String: CSS selector,\n  // HTMLElement: Element reference\n  // Mainly needed for tooltips/popovers inside modals\n  container: makeProp([HTMLElement, PROP_TYPE_STRING], 'body'),\n  disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n  // This should be set to match the root element type\n  tag: makeProp(PROP_TYPE_STRING, 'div')\n}; // --- Main component ---\n// @vue/component\n\nexport var BVTransporter = /*#__PURE__*/Vue.extend({\n  name: NAME_TRANSPORTER,\n  mixins: [normalizeSlotMixin],\n  props: props,\n  watch: {\n    disabled: {\n      immediate: true,\n      handler: function handler(disabled) {\n        disabled ? this.unmountTarget() : this.$nextTick(this.mountTarget);\n      }\n    }\n  },\n  created: function created() {\n    // Create private non-reactive props\n    this.$_defaultFn = null;\n    this.$_target = null;\n  },\n  beforeMount: function beforeMount() {\n    this.mountTarget();\n  },\n  updated: function updated() {\n    // We need to make sure that all children have completed updating\n    // before rendering in the target\n    // `vue-simple-portal` has the this in a `$nextTick()`,\n    // while `portal-vue` doesn't\n    // Just trying to see if the `$nextTick()` delay is required or not\n    // Since all slots in Vue 2.6.x are always functions\n    this.updateTarget();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unmountTarget();\n    this.$_defaultFn = null;\n  },\n  methods: {\n    // Get the element which the target should be appended to\n    getContainer: function getContainer() {\n      /* istanbul ignore else */\n      if (IS_BROWSER) {\n        var container = this.container;\n        return isString(container) ? select(container) : container;\n      } else {\n        return null;\n      }\n    },\n    // Mount the target\n    mountTarget: function mountTarget() {\n      if (!this.$_target) {\n        var $container = this.getContainer();\n\n        if ($container) {\n          var $el = document.createElement('div');\n          $container.appendChild($el);\n          this.$_target = new BVTransporterTarget({\n            el: $el,\n            parent: this,\n            propsData: {\n              // Initial nodes to be rendered\n              nodes: concat(this.normalizeSlot())\n            }\n          });\n        }\n      }\n    },\n    // Update the content of the target\n    updateTarget: function updateTarget() {\n      if (IS_BROWSER && this.$_target) {\n        var defaultFn = this.$scopedSlots.default;\n\n        if (!this.disabled) {\n          /* istanbul ignore else: only applicable in Vue 2.5.x */\n          if (defaultFn && this.$_defaultFn !== defaultFn) {\n            // We only update the target component if the scoped slot\n            // function is a fresh one. The new slot syntax (since Vue 2.6)\n            // can cache unchanged slot functions and we want to respect that here\n            this.$_target.updatedNodes = defaultFn;\n          } else if (!defaultFn) {\n            // We also need to be back compatible with non-scoped default slot (i.e. 2.5.x)\n            this.$_target.updatedNodes = this.$slots.default;\n          }\n        } // Update the scoped slot function cache\n\n\n        this.$_defaultFn = defaultFn;\n      }\n    },\n    // Unmount the target\n    unmountTarget: function unmountTarget() {\n      this.$_target && this.$_target.$destroy();\n      this.$_target = null;\n    }\n  },\n  render: function render(h) {\n    // This component has no root element, so only a single VNode is allowed\n    if (this.disabled) {\n      var $nodes = concat(this.normalizeSlot()).filter(identity);\n\n      if ($nodes.length > 0 && !$nodes[0].text) {\n        return $nodes[0];\n      }\n    }\n\n    return h();\n  }\n});","map":{"version":3,"sources":["C:/Users/varel/interbusweb/interbusfronent/node_modules/bootstrap-vue/esm/components/transporter/transporter.js"],"names":["Vue","NAME_TRANSPORTER","NAME_TRANSPORTER_TARGET","IS_BROWSER","PROP_TYPE_ARRAY_FUNCTION","PROP_TYPE_BOOLEAN","PROP_TYPE_STRING","HTMLElement","concat","removeNode","select","identity","isFunction","isString","normalizeSlotMixin","makeProp","BVTransporterTarget","extend","abstract","name","props","nodes","data","vm","updatedNodes","destroyed","$el","render","h","$nodes","filter","length","text","container","disabled","tag","BVTransporter","mixins","watch","immediate","handler","unmountTarget","$nextTick","mountTarget","created","$_defaultFn","$_target","beforeMount","updated","updateTarget","beforeDestroy","methods","getContainer","$container","document","createElement","appendChild","el","parent","propsData","normalizeSlot","defaultFn","$scopedSlots","default","$slots","$destroy"],"mappings":"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","sourcesContent":["import { Vue } from '../../vue';\r\nimport { NAME_TRANSPORTER, NAME_TRANSPORTER_TARGET } from '../../constants/components';\r\nimport { IS_BROWSER } from '../../constants/env';\r\nimport { PROP_TYPE_ARRAY_FUNCTION, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\r\nimport { HTMLElement } from '../../constants/safe-types';\r\nimport { concat } from '../../utils/array';\r\nimport { removeNode, select } from '../../utils/dom';\r\nimport { identity } from '../../utils/identity';\r\nimport { isFunction, isString } from '../../utils/inspect';\r\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\r\nimport { makeProp } from '../../utils/props'; // --- Helper components ---\r\n// BVTransporter/BVTransporterTarget:\r\n//\r\n// Single root node portaling of content, which retains parent/child hierarchy\r\n// Unlike Portal-Vue where portaled content is no longer a descendent of its\r\n// intended parent components\r\n//\r\n// Private components for use by Tooltips, Popovers and Modals\r\n//\r\n// Based on vue-simple-portal\r\n// https://github.com/LinusBorg/vue-simple-portal\r\n// Transporter target used by BVTransporter\r\n// Supports only a single root element\r\n// @vue/component\r\n\r\nvar BVTransporterTarget = /*#__PURE__*/Vue.extend({\r\n  // As an abstract component, it doesn't appear in the $parent chain of\r\n  // components, which means the next parent of any component rendered inside\r\n  // of this one will be the parent from which is was portal'd\r\n  abstract: true,\r\n  name: NAME_TRANSPORTER_TARGET,\r\n  props: {\r\n    // Even though we only support a single root element,\r\n    // VNodes are always passed as an array\r\n    nodes: makeProp(PROP_TYPE_ARRAY_FUNCTION)\r\n  },\r\n  data: function data(vm) {\r\n    return {\r\n      updatedNodes: vm.nodes\r\n    };\r\n  },\r\n  destroyed: function destroyed() {\r\n    removeNode(this.$el);\r\n  },\r\n  render: function render(h) {\r\n    var updatedNodes = this.updatedNodes;\r\n    var $nodes = isFunction(updatedNodes) ? updatedNodes({}) : updatedNodes;\r\n    $nodes = concat($nodes).filter(identity);\r\n\r\n    if ($nodes && $nodes.length > 0 && !$nodes[0].text) {\r\n      return $nodes[0];\r\n    }\r\n    /* istanbul ignore next */\r\n\r\n\r\n    return h();\r\n  }\r\n}); // --- Props ---\r\n\r\nexport var props = {\r\n  // String: CSS selector,\r\n  // HTMLElement: Element reference\r\n  // Mainly needed for tooltips/popovers inside modals\r\n  container: makeProp([HTMLElement, PROP_TYPE_STRING], 'body'),\r\n  disabled: makeProp(PROP_TYPE_BOOLEAN, false),\r\n  // This should be set to match the root element type\r\n  tag: makeProp(PROP_TYPE_STRING, 'div')\r\n}; // --- Main component ---\r\n// @vue/component\r\n\r\nexport var BVTransporter = /*#__PURE__*/Vue.extend({\r\n  name: NAME_TRANSPORTER,\r\n  mixins: [normalizeSlotMixin],\r\n  props: props,\r\n  watch: {\r\n    disabled: {\r\n      immediate: true,\r\n      handler: function handler(disabled) {\r\n        disabled ? this.unmountTarget() : this.$nextTick(this.mountTarget);\r\n      }\r\n    }\r\n  },\r\n  created: function created() {\r\n    // Create private non-reactive props\r\n    this.$_defaultFn = null;\r\n    this.$_target = null;\r\n  },\r\n  beforeMount: function beforeMount() {\r\n    this.mountTarget();\r\n  },\r\n  updated: function updated() {\r\n    // We need to make sure that all children have completed updating\r\n    // before rendering in the target\r\n    // `vue-simple-portal` has the this in a `$nextTick()`,\r\n    // while `portal-vue` doesn't\r\n    // Just trying to see if the `$nextTick()` delay is required or not\r\n    // Since all slots in Vue 2.6.x are always functions\r\n    this.updateTarget();\r\n  },\r\n  beforeDestroy: function beforeDestroy() {\r\n    this.unmountTarget();\r\n    this.$_defaultFn = null;\r\n  },\r\n  methods: {\r\n    // Get the element which the target should be appended to\r\n    getContainer: function getContainer() {\r\n      /* istanbul ignore else */\r\n      if (IS_BROWSER) {\r\n        var container = this.container;\r\n        return isString(container) ? select(container) : container;\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    // Mount the target\r\n    mountTarget: function mountTarget() {\r\n      if (!this.$_target) {\r\n        var $container = this.getContainer();\r\n\r\n        if ($container) {\r\n          var $el = document.createElement('div');\r\n          $container.appendChild($el);\r\n          this.$_target = new BVTransporterTarget({\r\n            el: $el,\r\n            parent: this,\r\n            propsData: {\r\n              // Initial nodes to be rendered\r\n              nodes: concat(this.normalizeSlot())\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    // Update the content of the target\r\n    updateTarget: function updateTarget() {\r\n      if (IS_BROWSER && this.$_target) {\r\n        var defaultFn = this.$scopedSlots.default;\r\n\r\n        if (!this.disabled) {\r\n          /* istanbul ignore else: only applicable in Vue 2.5.x */\r\n          if (defaultFn && this.$_defaultFn !== defaultFn) {\r\n            // We only update the target component if the scoped slot\r\n            // function is a fresh one. The new slot syntax (since Vue 2.6)\r\n            // can cache unchanged slot functions and we want to respect that here\r\n            this.$_target.updatedNodes = defaultFn;\r\n          } else if (!defaultFn) {\r\n            // We also need to be back compatible with non-scoped default slot (i.e. 2.5.x)\r\n            this.$_target.updatedNodes = this.$slots.default;\r\n          }\r\n        } // Update the scoped slot function cache\r\n\r\n\r\n        this.$_defaultFn = defaultFn;\r\n      }\r\n    },\r\n    // Unmount the target\r\n    unmountTarget: function unmountTarget() {\r\n      this.$_target && this.$_target.$destroy();\r\n      this.$_target = null;\r\n    }\r\n  },\r\n  render: function render(h) {\r\n    // This component has no root element, so only a single VNode is allowed\r\n    if (this.disabled) {\r\n      var $nodes = concat(this.normalizeSlot()).filter(identity);\r\n\r\n      if ($nodes.length > 0 && !$nodes[0].text) {\r\n        return $nodes[0];\r\n      }\r\n    }\r\n\r\n    return h();\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}