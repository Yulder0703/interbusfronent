{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"DespachadorComponent\",\n  data: function data() {\n    return {\n      items: [{\n        Hora: '10:00',\n        PlacaBus: 4443,\n        NombConductor: 'Andres Salsedo'\n      }, {\n        Hora: '11:00',\n        PlacaBus: 2551,\n        NombConductor: 'Larsen Mosquera'\n      }, {\n        Hora: '12:00',\n        PlacaBus: 9444,\n        NombConductor: 'Mini Navarro'\n      }, {\n        Hora: '12:30',\n        PlacaBus: 8934,\n        NombConductor: 'Genevan Lopez'\n      }, {\n        Hora: '12:20',\n        PlacaBus: 3668,\n        NombConductor: 'JamiCarney'\n      }, {\n        Hora: '01:00',\n        PlacaBus: 2667,\n        NombConductor: 'Essie Dunlap'\n      }, {\n        Hora: '08:00',\n        PlacaBus: 4990,\n        NombConductor: 'Gerardo Guerrero'\n      }, {\n        Hora: '03:00',\n        PlacaBus: 2556,\n        NombConductor: 'Sebastian Dunlap'\n      }, {\n        Hora: '04:50',\n        PlacaBus: 2332,\n        NombConductor: 'Lucia Arjona'\n      }, {\n        Hora: '03:30',\n        PlacaBus: 3866,\n        NombConductor: 'Ferney Calderon'\n      }, {\n        Hora: '02:20',\n        PlacaBus: 2779,\n        NombConductor: 'Marcos Caicedo'\n      }],\n      fields: [{\n        key: 'NombConductor',\n        label: 'NombConductor'\n      }, {\n        key: 'Hora',\n        label: 'Hora'\n      }, {\n        key: 'PlacaBus',\n        label: 'Placa Bus'\n      }, {\n        key: 'NombConductor',\n        label: '' // formatter: (value, key, item) => {\n        //   return value ? 'Yes' : 'No'\n        // },\n\n      }, {\n        key: 'actions',\n        label: 'Actions'\n      }],\n      // totalRows: 1,\n      // currentPage: 1,\n      perPage: 5,\n      pageOptions: [1, 2, 3, 4, 5, 6, 7, {\n        value: 100\n      }],\n      sortBy: '',\n      sortDesc: false,\n      sortDirection: 'asc',\n      filter: null,\n      filterOn: [],\n      infoModal: {\n        id: 'info_modal',\n        title: '',\n        content: ''\n      }\n    };\n  },\n  computed: {\n    sortOptions: function sortOptions() {\n      // Create an options list from our fields\n      return this.fields.filter(function (f) {\n        return f.sortable;\n      }).map(function (f) {\n        return {\n          text: f.label,\n          value: f.key\n        };\n      });\n    }\n  },\n  mounted: function mounted() {\n    // Set the initial number of items\n    this.totalRows = this.items.length;\n  },\n  methods: {\n    info: function info(item, index, button) {\n      this.infoModal.title = \"TIQUETE: \".concat(index);\n      this.infoModal.content = JSON.stringify(item, null, 2);\n      this.$root.$emit('bv::show::modal', this.infoModal.id, button);\n    },\n    resetInfoModal: function resetInfoModal() {\n      this.infoModal.title = '';\n      this.infoModal.content = '';\n    },\n    onFiltered: function onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACAA,8BADA;AAEAC,MAFA,kBAEA;AACA;AACAC,cACA;AAAAC;AAAAC;AAAAC;AAAA,OADA,EAEA;AAAAF;AAAAC;AAAAC;AAAA,OAFA,EAGA;AAAAF;AAAAC;AAAAC;AAAA,OAHA,EAIA;AAAAF;AAAAC;AAAAC;AAAA,OAJA,EAKA;AAAAF;AAAAC;AAAAC;AAAA,OALA,EAMA;AAAAF;AAAAC;AAAAC;AAAA,OANA,EAOA;AAAAF;AAAAC;AAAAC;AAAA,OAPA,EASA;AAAAF;AAAAC;AAAAC;AAAA,OATA,EAUA;AAAAF;AAAAC;AAAAC;AAAA,OAVA,EAWA;AAAAF;AAAAC;AAAAC;AAAA,OAXA,EAYA;AAAAF;AAAAC;AAAAC;AAAA,OAZA,CADA;AAeAC,eACA;AAAAC;AAAAC;AAAA,OADA,EAEA;AAAAD;AAAAC;AAAA,OAFA,EAGA;AAAAD;AAAAC;AAAA,OAHA,EAIA;AACAD,4BADA;AAEAC,iBAFA,CAGA;AACA;AACA;;AALA,OAJA,EAYA;AAAAD;AAAAC;AAAA,OAZA,CAfA;AA6BA;AACA;AACAC,gBA/BA;AAgCAC;AAAAC;AAAA,QAhCA;AAiCAC,gBAjCA;AAkCAC,qBAlCA;AAmCAC,0BAnCA;AAoCAC,kBApCA;AAqCAC,kBArCA;AAsCAC;AACAC,wBADA;AAEAC,iBAFA;AAGAC;AAHA;AAtCA;AA4CA,GA/CA;AAgDAC;AACAC,eADA,yBACA;AACA;AACA,yBACAP,MADA,CACA;AAAA;AAAA,OADA,EAEAQ,GAFA,CAEA;AACA;AAAAC;AAAAb;AAAA;AACA,OAJA;AAKA;AARA,GAhDA;AA0DAc,SA1DA,qBA0DA;AACA;AACA;AACA,GA7DA;AA8DAC;AACAC,QADA,gBACAC,IADA,EACAC,KADA,EACAC,MADA,EACA;AACA;AACA;AACA;AACA,KALA;AAMAC,kBANA,4BAMA;AACA;AACA;AACA,KATA;AAUAC,cAVA,sBAUAC,aAVA,EAUA;AACA;AACA;AACA;AACA;AAdA;AA9DA","names":["name","data","items","Hora","PlacaBus","NombConductor","fields","key","label","perPage","pageOptions","value","sortBy","sortDesc","sortDirection","filter","filterOn","infoModal","id","title","content","computed","sortOptions","map","text","mounted","methods","info","item","index","button","resetInfoModal","onFiltered","filteredItems"],"sourceRoot":"src/components","sources":["DespachadorComponent.vue"],"sourcesContent":["<template>\r\n   <div>\r\n    \r\n      <b-col sm=\"5\" md=\"6\" class=\"my-1\">\r\n        <b-form-group\r\n          label=\"VER\"\r\n          label-for=\"per-page-select\"\r\n          label-cols-sm=\"6\"\r\n          label-cols-md=\"4\"\r\n          label-cols-lg=\"3\"\r\n          label-align-sm=\"right\"\r\n          label-size=\"sm\"\r\n          class=\"mb-0\"\r\n        >\r\n          <b-form-select\r\n            id=\"per-page-select\"\r\n            v-model=\"perPage\"\r\n            :options=\"pageOptions\"\r\n            size=\"sm\"\r\n          ></b-form-select>\r\n        </b-form-group>\r\n      </b-col>\r\n\r\n      <!-- <b-col sm=\"7\" md=\"6\" class=\"my-1\">\r\n        <b-pagination\r\n          v-model=\"currentPage\"\r\n          :total-rows=\"totalRows\"\r\n          :per-page=\"perPage\"\r\n          align=\"fill\"\r\n          size=\"sm\"\r\n          class=\"my-0\"\r\n        ></b-pagination>\r\n      </b-col> -->\r\n  \r\n\r\n    <!-- Main table element -->\r\n    <b-table\r\n      :items=\"items\"\r\n      :fields=\"fields\"\r\n      :current-page=\"currentPage\"\r\n      :per-page=\"perPage\"\r\n      :filter=\"filter\"\r\n      :filter-included-fields=\"filterOn\"\r\n      :sort-by.sync=\"sortBy\"\r\n      :sort-desc.sync=\"sortDesc\"\r\n      :sort-direction=\"sortDirection\"\r\n      stacked=\"md\"\r\n      show-empty\r\n      small\r\n      @filtered=\"onFiltered\"\r\n    >\r\n      <template #cell(name)=\"row\">\r\n        {{ row.value.first }} {{ row.value.last }}\r\n      </template>\r\n\r\n      <template #cell(actions)=\"row\">\r\n        <b-button size=\"sm\" @click=\"info(row.item, row.index, $event.target)\" class=\"mr-1\">\r\n          DESPACHAR\r\n        </b-button>\r\n        <!-- <b-button size=\"sm\" @click=\"row.toggleDetails\">\r\n          {{ row.detailsShowing ? 'Hide' : 'Show' }} Details\r\n        </b-button> -->\r\n      </template>\r\n\r\n      <template #row-details=\"row\">\r\n        <b-card>\r\n          <ul>\r\n            <li v-for=\"(value, key) in row.item\" :key=\"key\">{{ key }}: {{ value }}</li>\r\n          </ul>\r\n        </b-card>\r\n      </template>\r\n    </b-table>\r\n\r\n    <!-- Info modal -->\r\n    <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" IMPRIMIR-only @hide=\"resetInfoModal\">\r\n      <pre>{{ infoModal.content }}</pre>\r\n    </b-modal>\r\n  \r\n\r\n\r\n </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name:\"DespachadorComponent\",\r\n  data() {\r\n      return {\r\n        items: [\r\n          {  Hora: '10:00', PlacaBus: 4443, NombConductor:  'Andres Salsedo'  },\r\n          {  Hora: '11:00', PlacaBus: 2551, NombConductor: 'Larsen Mosquera'  },\r\n          {  Hora: '12:00',  PlacaBus: 9444, NombConductor: 'Mini Navarro' },\r\n          {  Hora: '12:30', PlacaBus: 8934, NombConductor: 'Genevan Lopez' },\r\n          {  Hora: '12:20', PlacaBus: 3668, NombConductor: 'JamiCarney' },\r\n          {  Hora: '01:00', PlacaBus: 2667, NombConductor: 'Essie Dunlap'  },\r\n          {  Hora: '08:00', PlacaBus: 4990, NombConductor:  'Gerardo Guerrero'  },\r\n         \r\n          { Hora: '03:00', PlacaBus: 2556, NombConductor: 'Sebastian Dunlap'  },\r\n          { Hora: '04:50', PlacaBus: 2332,NombConductor: 'Lucia Arjona'  },\r\n          { Hora: '03:30', PlacaBus: 3866, NombConductor: 'Ferney Calderon'  },\r\n          { Hora: '02:20', PlacaBus: 2779,NombConductor: 'Marcos Caicedo'  },\r\n        ],\r\n        fields: [\r\n          { key: 'NombConductor', label: 'NombConductor' },\r\n          { key: 'Hora', label: 'Hora' },\r\n          { key: 'PlacaBus', label: 'Placa Bus' },\r\n          {\r\n            key: 'NombConductor',\r\n            label: '',\r\n            // formatter: (value, key, item) => {\r\n            //   return value ? 'Yes' : 'No'\r\n            // },\r\n           \r\n          },\r\n          { key: 'actions', label: 'Actions' }\r\n        ],\r\n        // totalRows: 1,\r\n        // currentPage: 1,\r\n        perPage: 5,\r\n        pageOptions: [1, 2,3,4,5,6,7, { value: 100,}],\r\n        sortBy: '',\r\n        sortDesc: false,\r\n        sortDirection: 'asc',\r\n        filter: null,\r\n        filterOn: [],\r\n        infoModal: {\r\n          id: 'info_modal',\r\n          title: '',\r\n          content: ''\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      sortOptions() {\r\n        // Create an options list from our fields\r\n        return this.fields\r\n          .filter(f => f.sortable)\r\n          .map(f => {\r\n            return { text: f.label, value: f.key }\r\n          })\r\n      }\r\n    },\r\n    mounted() {\r\n      // Set the initial number of items\r\n      this.totalRows = this.items.length\r\n    },\r\n    methods: {\r\n      info(item, index, button) {\r\n        this.infoModal.title = `TIQUETE: ${index}`\r\n        this.infoModal.content = JSON.stringify(item, null, 2)\r\n        this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n      },\r\n      resetInfoModal() {\r\n        this.infoModal.title = ''\r\n        this.infoModal.content = ''\r\n      },\r\n      onFiltered(filteredItems) {\r\n        // Trigger pagination to update the number of buttons/pages due to filtering\r\n        this.totalRows = filteredItems.length\r\n        this.currentPage = 1\r\n      }\r\n    }\r\n  }\r\n</script>"]},"metadata":{},"sourceType":"module"}